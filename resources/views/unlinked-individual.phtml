<?php

use Fisharebest\Webtrees\Auth;
use Fisharebest\Webtrees\Fact;
#use Fisharebest\Webtrees\Family;
use Fisharebest\Webtrees\Functions\FunctionsEdit;
use Fisharebest\Webtrees\Gedcom;
use Fisharebest\Webtrees\GedcomTag;
#use Fisharebest\Webtrees\Http\RequestHandlers\AddChildToFamilyAction;
use Fisharebest\Webtrees\Http\RequestHandlers\AddChildToIndividualAction;
use Fisharebest\Webtrees\Http\RequestHandlers\AddParentToIndividualAction;
#use Fisharebest\Webtrees\Http\RequestHandlers\AddSpouseToFamilyAction;
use Fisharebest\Webtrees\Http\RequestHandlers\AddSpouseToIndividualAction;
use Fisharebest\Webtrees\Http\RequestHandlers\AddUnlinkedAction;
use Fisharebest\Webtrees\Http\RequestHandlers\EditFactAction;
use Fisharebest\Webtrees\Http\RequestHandlers\EditRawFactPage;
use Fisharebest\Webtrees\Http\RequestHandlers\ManageTrees;
use Fisharebest\Webtrees\Http\RequestHandlers\PageTrees;
use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Individual;
use Fisharebest\Webtrees\Tree;
use Fisharebest\Webtrees\View;
use Illuminate\Support\Collection;

/**
 * @var Family|null     $family
 * @var string          $famtag
 * @var string          $gender
 * @var Individual|null $individual
 * @var Fact|null       $name_fact
# * @var string          $next_action
 * @var string          $title
 * @var Tree            $tree
 */

?>

<?php

    $cancel_url = route(ManageTrees::class, ['tree' => $tree->name()]);
#print_r($cancel_url); echo "<br>";
#    $cancel_url = str_replace('%2Fadmin','', $cancel_url);
    $cancel_url = str_replace(array('%2Fadmin','%2Fmanage'),'', $cancel_url);
    $cancel_url = str_replace('%2Ftrees','%2Ftree', $cancel_url);
#print_r($cancel_url);
    $xref       = 'new';

    // Creating a new name
    $name_fact_id = '';
    $namerec      = '';
    $name_fields  = [
        'NAME' => '',
        'GIVN' => '',
        'SURN' => '',
    ];

    $father      = null;
    $mother      = null;
    $father_name = '';
    $mother_name = '';
    $indi_name = '';

    $name_fields['NAME'] = '//';

$bdm = ''; // used to copy '1 SOUR' to '2 SOUR' for BIRT DEAT MARR

?>
<h2 class="wt-page-title"><?= $title ?></h2>

<?php
#<form method="post" action="< ? = e(route($next_action, ['tree' => $tree->name(), 'xref' => $xref, 'fact_id' => $name_fact ? $name_fact->id() : null])) ? >" onsubmit="return checkform();">
?>
<form method="post" action="" onsubmit="return checkform();">
    <input type="hidden" name="fact_id" value="<?= e($name_fact_id) ?>">
    <input type="hidden" name="famtag" value="<?= e($famtag) ?>">
    <input type="hidden" name="gender" value="<?= $gender ?>">
    <?= csrf_field() ?>

    <?php
    // If we are adding a new individual, choose the sex.
	echo FunctionsEdit::addSimpleTag($tree, '0 SEX U');
    ?>

    <?php
    // First - standard name fields
    foreach ($name_fields as $tag => $value) {
        if (substr_compare($tag, '_', 0, 1) !== 0) {
            echo FunctionsEdit::addSimpleTag($tree, '0 ' . $tag . ' ' . $value, '', '');
        }
    }

    ?>
    <div class="row form-group">
        <div class="col-sm-9 offset-sm-3">
            <button class="btn btn-primary" type="submit">
                <?= view('icons/save') ?>
                <?= /* I18N: A button label. */
                I18N::translate('save') ?>
            </button>
            <a class="btn btn-secondary" href="<?= e($cancel_url) ?>">
                <?= view('icons/cancel') ?>
                <?= /* I18N: A button label. */
                I18N::translate('cancel') ?>
            </a>

            <?php if ($name_fact instanceof Fact && (Auth::isAdmin() || $tree->getPreference('SHOW_GEDCOM_RECORD'))) : ?>
                <a class="btn btn-link" href="<?= e(route(EditRawFactPage::class, ['xref' => $xref, 'fact_id' => $name_fact->id(), 'tree' => $tree->name()])) ?>">
                    <?= I18N::translate('Edit the raw GEDCOM') ?>
                </a>
            <?php endif ?>
        </div>
    </div>
</form>

<?= view('modals/on-screen-keyboard') ?>
<?= view('modals/ajax') ?>
<?= view('edit/initialize-calendar-popup') ?>

<?php View::push('javascript') ?>
<script>
    var NAME = $("[name=NAME]");

    // Generate a full name from the name components
    function generate_name() {
        var givn      = document.querySelector("[name=GIVN]").value;
        var surn      = document.querySelector("[name=SURN]").value;
        var sex_input = document.querySelector("[name=SEX]:checked");
        var sex       = sex_input ? sex_input.value : "U";

        return webtrees.buildNameFromParts(givn, surn, sex);
    }

    // Update the NAME and _MARNM fields from the name components
    // and also display the value in read-only "gedcom" format.
    function updatewholename() {
        // Don’t update the name if the user manually changed it
        if (manualChange) {
            return;
        }

        var givn = document.querySelector("[name=GIVN]").value;
        var surn = document.querySelector("[name=SURN]").value;
        var name = generate_name();

        var display_id = NAME.attr("id") + "_display";

        NAME.val(name);
        $("#" + display_id).text(name);

        // Update _MARNM field from _MARNM_SURN field and display it
        var ip       = document.getElementsByTagName("input");
        var marnm_id = "";
        var i;

        for (i = 0; i < ip.length; i++) {
            var val = ip[i].value;

            if (ip[i].id.indexOf("_MARNM") === 0) {
                if (ip[i].id.indexOf("_MARNM_SURN") === 0) {
                    var msurn = "";
                    if (val !== "") {
                        if (surn === "" || webtrees.detectScript(val) === webtrees.detectScript(surn)) {
                            // Same script as NAME field?
                            msurn = name.replace(/\/.*\//, "/" + val + "/");
                        } else if (heb !== "" && webtrees.detectScript(val) === webtrees.detectScript(heb)) {
                            // Same script as _HEB field?
                            msurn = heb.replace(/\/.*\//, "/" + val + "/");
                        } else if (romn !== "" && webtrees.detectScript(val) === webtrees.detectScript(romn)) {
                            //. Same script as ROMN field
                            msurn = romn.replace(/\/.*\//, "/" + val + "/");
                        }
                    }
                    document.getElementById(marnm_id).value                  = msurn;
                    document.getElementById(marnm_id + "_display").innerHTML = msurn;
                } else {
                    marnm_id = ip[i].id;
                }
            }
        }
    }

    // Toggle the name editor fields between
    // <input type="hidden"> <span style="display:inline">
    // <input type="text">   <span style="display:none">

    var oldName = "";

    // Calls to generate_name() trigger an update - hence need to
    // set the manual change to true first. We are probably
    // listening to the wrong events on the input fields...
    var manualChange = generate_name() !== NAME.val();

    function convertHidden(eid) {
        var input1 = $("#" + eid);
        var input2 = $("#" + eid + "_display");

        if (input1.attr("type") === "hidden") {
            input1.attr("type", "text");
            input2.hide();
        } else {
            input1.attr("type", "hidden");
            input2.show();
        }
    }

    /**
     * if the user manually changed the NAME field, then update the textual
     * HTML representation of it
     * If the value changed set manualChange to true so that changing
     * the other fields doesn’t change the NAME line
     */
    function updateTextName(eid) {
        var element = document.getElementById(eid);
        if (element) {
            if (element.value !== oldName) {
                manualChange = true;
            }
            var delement = document.getElementById(eid + "_display");
            if (delement) {
                delement.innerHTML = element.value;
            }
        }
    }

    function checkform() {
        var ip = document.getElementsByTagName("input");
        return true;
    }

    // If the name isn’t initially formed from the components in a standard way,
    // then don’t automatically update it.
    if (NAME.val() !== generate_name() && NAME.val() !== "//") {
        convertHidden(NAME.attr("id"));
    }
</script>
<?php View::endpush() ?>

